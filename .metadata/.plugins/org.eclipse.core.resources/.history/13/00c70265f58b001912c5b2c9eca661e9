package org.lqz.sale.domain;
// Generated 2019-6-11 11:02:34 by Hibernate Tools 5.2.12.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * ItemInfo generated by hbm2java
 */
@Entity
@Table(name="item_info"
    ,catalog="saletest"
)
public class ItemInfo  implements java.io.Serializable {


     private String itemNo;
     private String itemName;
     private String itemType;
     private String unit;
     private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
     private Cpy cpy;
     private Set<Transfer> transfers = new HashSet<Transfer>(0);
     private Set<StoreStockInfo> storeStockInfos = new HashSet<StoreStockInfo>(0);
     private Set<Presale> presales = new HashSet<Presale>(0);
     private Set<StoreItemsale> storeItemsales = new HashSet<StoreItemsale>(0);
     private Set<Supply> supplies = new HashSet<Supply>(0);

    public ItemInfo() {
    }

	
    public ItemInfo(String itemNo) {
        this.itemNo = itemNo;
    }
    public ItemInfo(String itemNo, String itemName, String itemType, String unit, Set<OrderDetail> orderDetails, Cpy cpy, Set<Transfer> transfers, Set<StoreStockInfo> storeStockInfos, Set<Presale> presales, Set<StoreItemsale> storeItemsales, Set<Supply> supplies) {
       this.itemNo = itemNo;
       this.itemName = itemName;
       this.itemType = itemType;
       this.unit = unit;
       this.orderDetails = orderDetails;
       this.cpy = cpy;
       this.transfers = transfers;
       this.storeStockInfos = storeStockInfos;
       this.presales = presales;
       this.storeItemsales = storeItemsales;
       this.supplies = supplies;
    }
   
     @Id 

    
    @Column(name="Item_no", unique=true, nullable=false, length=13)
    public String getItemNo() {
        return this.itemNo;
    }
    
    public void setItemNo(String itemNo) {
        this.itemNo = itemNo;
    }

    
    @Column(name="Item_name", length=20)
    public String getItemName() {
        return this.itemName;
    }
    
    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

    
    @Column(name="Item_type", length=10)
    public String getItemType() {
        return this.itemType;
    }
    
    public void setItemType(String itemType) {
        this.itemType = itemType;
    }

    
    @Column(name="Unit", length=5)
    public String getUnit() {
        return this.unit;
    }
    
    public void setUnit(String unit) {
        this.unit = unit;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<OrderDetail> getOrderDetails() {
        return this.orderDetails;
    }
    
    public void setOrderDetails(Set<OrderDetail> orderDetails) {
        this.orderDetails = orderDetails;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Cpy getCpy() {
        return this.cpy;
    }
    
    public void setCpy(Cpy cpy) {
        this.cpy = cpy;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<Transfer> getTransfers() {
        return this.transfers;
    }
    
    public void setTransfers(Set<Transfer> transfers) {
        this.transfers = transfers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<StoreStockInfo> getStoreStockInfos() {
        return this.storeStockInfos;
    }
    
    public void setStoreStockInfos(Set<StoreStockInfo> storeStockInfos) {
        this.storeStockInfos = storeStockInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<Presale> getPresales() {
        return this.presales;
    }
    
    public void setPresales(Set<Presale> presales) {
        this.presales = presales;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<StoreItemsale> getStoreItemsales() {
        return this.storeItemsales;
    }
    
    public void setStoreItemsales(Set<StoreItemsale> storeItemsales) {
        this.storeItemsales = storeItemsales;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemInfo")
    public Set<Supply> getSupplies() {
        return this.supplies;
    }
    
    public void setSupplies(Set<Supply> supplies) {
        this.supplies = supplies;
    }




}


