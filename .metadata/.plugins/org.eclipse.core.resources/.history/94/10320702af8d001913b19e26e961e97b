package org.zhxf.sale.domain;
// Generated 2019-6-13 15:43:41 by Hibernate Tools 5.2.12.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * StoreInfo generated by hbm2java
 */
@Entity
@Table(name="store_info"
    ,catalog="saletest"
)
public class StoreInfo  implements java.io.Serializable {


     private String storeNo;
     private String storeName;
     private String storeAddr;
     private String manager;
     private String tel;
     private Set<Send> sends = new HashSet<Send>(0);
     private Set<Transfer> transfersForInStoreNo = new HashSet<Transfer>(0);
     private Set<StoreItemsale> storeItemsales = new HashSet<StoreItemsale>(0);
     private Set<Transfer> transfersForOutStoreNo = new HashSet<Transfer>(0);
     private Set<Presale> presales = new HashSet<Presale>(0);
     private Set<StoreStockInfo> storeStockInfos = new HashSet<StoreStockInfo>(0);
     private Set<StaffInfo> staffInfos = new HashSet<StaffInfo>(0);
     private Set<Sale> sales = new HashSet<Sale>(0);

    public StoreInfo() {
    }

	
    public StoreInfo(String storeNo) {
        this.storeNo = storeNo;
    }
    public StoreInfo(String storeNo, String storeName, String storeAddr, String manager, String tel, Set<Send> sends, Set<Transfer> transfersForInStoreNo, Set<StoreItemsale> storeItemsales, Set<Transfer> transfersForOutStoreNo, Set<Presale> presales, Set<StoreStockInfo> storeStockInfos, Set<StaffInfo> staffInfos, Set<Sale> sales) {
       this.storeNo = storeNo;
       this.storeName = storeName;
       this.storeAddr = storeAddr;
       this.manager = manager;
       this.tel = tel;
       this.sends = sends;
       this.transfersForInStoreNo = transfersForInStoreNo;
       this.storeItemsales = storeItemsales;
       this.transfersForOutStoreNo = transfersForOutStoreNo;
       this.presales = presales;
       this.storeStockInfos = storeStockInfos;
       this.staffInfos = staffInfos;
       this.sales = sales;
    }
   
     @Id 

    
    @Column(name="Store_no", unique=true, nullable=false, length=13)
    public String getStoreNo() {
        return this.storeNo;
    }
    
    public void setStoreNo(String storeNo) {
        this.storeNo = storeNo;
    }

    
    @Column(name="Store_name", length=20)
    public String getStoreName() {
        return this.storeName;
    }
    
    public void setStoreName(String storeName) {
        this.storeName = storeName;
    }

    
    @Column(name="Store_addr", length=20)
    public String getStoreAddr() {
        return this.storeAddr;
    }
    
    public void setStoreAddr(String storeAddr) {
        this.storeAddr = storeAddr;
    }

    
    @Column(name="Manager", length=20)
    public String getManager() {
        return this.manager;
    }
    
    public void setManager(String manager) {
        this.manager = manager;
    }

    
    @Column(name="Tel", length=55)
    public String getTel() {
        return this.tel;
    }
    
    public void setTel(String tel) {
        this.tel = tel;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<Send> getSends() {
        return this.sends;
    }
    
    public void setSends(Set<Send> sends) {
        this.sends = sends;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfoByInStoreNo")
    public Set<Transfer> getTransfersForInStoreNo() {
        return this.transfersForInStoreNo;
    }
    
    public void setTransfersForInStoreNo(Set<Transfer> transfersForInStoreNo) {
        this.transfersForInStoreNo = transfersForInStoreNo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<StoreItemsale> getStoreItemsales() {
        return this.storeItemsales;
    }
    
    public void setStoreItemsales(Set<StoreItemsale> storeItemsales) {
        this.storeItemsales = storeItemsales;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfoByOutStoreNo")
    public Set<Transfer> getTransfersForOutStoreNo() {
        return this.transfersForOutStoreNo;
    }
    
    public void setTransfersForOutStoreNo(Set<Transfer> transfersForOutStoreNo) {
        this.transfersForOutStoreNo = transfersForOutStoreNo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<Presale> getPresales() {
        return this.presales;
    }
    
    public void setPresales(Set<Presale> presales) {
        this.presales = presales;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<StoreStockInfo> getStoreStockInfos() {
        return this.storeStockInfos;
    }
    
    public void setStoreStockInfos(Set<StoreStockInfo> storeStockInfos) {
        this.storeStockInfos = storeStockInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<StaffInfo> getStaffInfos() {
        return this.staffInfos;
    }
    
    public void setStaffInfos(Set<StaffInfo> staffInfos) {
        this.staffInfos = staffInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="storeInfo")
    public Set<Sale> getSales() {
        return this.sales;
    }
    
    public void setSales(Set<Sale> sales) {
        this.sales = sales;
    }




}


