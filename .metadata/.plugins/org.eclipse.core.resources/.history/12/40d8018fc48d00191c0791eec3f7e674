package org.zhxf.sale.domain;
// Generated 2019-6-13 15:43:41 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Transfer generated by hbm2java
 */
@Entity
@Table(name = "transfer", catalog = "saletest")
public class Transfer implements java.io.Serializable {

	private Integer id;
	private ItemInfo itemInfo;
	private StoreInfo storeInfoByInStoreNo;
	private StoreInfo storeInfoByOutStoreNo;
	private Date transferDate;
	private Long transferQty;

	public Transfer() {
	}

	public Transfer(ItemInfo itemInfo, StoreInfo storeInfoByInStoreNo, StoreInfo storeInfoByOutStoreNo,
			Date transferDate) {
		this.itemInfo = itemInfo;
		this.storeInfoByInStoreNo = storeInfoByInStoreNo;
		this.storeInfoByOutStoreNo = storeInfoByOutStoreNo;
		this.transferDate = transferDate;
	}

	public Transfer(ItemInfo itemInfo, StoreInfo storeInfoByInStoreNo, StoreInfo storeInfoByOutStoreNo,
			Date transferDate, Long transferQty) {
		this.itemInfo = itemInfo;
		this.storeInfoByInStoreNo = storeInfoByInStoreNo;
		this.storeInfoByOutStoreNo = storeInfoByOutStoreNo;
		this.transferDate = transferDate;
		this.transferQty = transferQty;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Item_no", nullable = false)
	public ItemInfo getItemInfo() {
		return this.itemInfo;
	}

	public void setItemInfo(ItemInfo itemInfo) {
		this.itemInfo = itemInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "InStore_no", nullable = false)
	public StoreInfo getStoreInfoByInStoreNo() {
		return this.storeInfoByInStoreNo;
	}

	public void setStoreInfoByInStoreNo(StoreInfo storeInfoByInStoreNo) {
		this.storeInfoByInStoreNo = storeInfoByInStoreNo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OutStore_no", nullable = false)
	public StoreInfo getStoreInfoByOutStoreNo() {
		return this.storeInfoByOutStoreNo;
	}

	public void setStoreInfoByOutStoreNo(StoreInfo storeInfoByOutStoreNo) {
		this.storeInfoByOutStoreNo = storeInfoByOutStoreNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Transfer_date", nullable = false, length = 19)
	public Date getTransferDate() {
		return this.transferDate;
	}

	public void setTransferDate(Date transferDate) {
		this.transferDate = transferDate;
	}

	@Column(name = "Transfer_qty")
	public Long getTransferQty() {
		return this.transferQty;
	}

	public void setTransferQty(Long transferQty) {
		this.transferQty = transferQty;
	}

}
